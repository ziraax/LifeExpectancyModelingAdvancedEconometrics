"0","# Filtrer pour ne garder qu'une seule année (par exemple, la plus récente disponible)"
"0","df_clean <- df %>%"
"0","  pivot_longer(cols = starts_with(""20""), "
"0","               names_to = ""Year"", "
"0","               values_to = ""Value"") %>%"
"0","  filter(!is.na(Value)) %>%"
"0","  group_by(`Country Name`, `Country Code`, `Series Name`, `Series Code`) %>%"
"0","  slice_max(Year) %>%  # Prend la dernière année disponible"
"0","  ungroup()"
"0",""
"0","# Transformer les séries en colonnes"
"0","df_wide <- df_clean %>%"
"0","  select(-Year, -`Series Code`) %>%"
"0","  pivot_wider(names_from = `Series Name`, values_from = Value) %>%"
"0","  drop_na()  # Supprime les lignes contenant des NA"
"0",""
"0","# Afficher la dimension du dataset final"
"0","print(dim(df_wide))"
"1","[1]"
"1"," 154"
"1","   8"
"1","
"
"0","# Sauvegarder le fichier transformé"
"0","write.csv(df_wide, ""./DATA/data_transformed_clean.csv"", row.names = FALSE)"
